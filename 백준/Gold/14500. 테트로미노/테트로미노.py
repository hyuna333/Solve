import sys
input = sys.stdin.readline

tetrominos = [
    # I
    [(0, 0), (0, 1), (0, 2), (0, 3)],  # 가로
    [(0, 0), (1, 0), (2, 0), (3, 0)],  # 세로

    # O
    [(0, 0), (1, 0), (0, 1), (1, 1)],

    # T
    [(0, 0), (0, 1), (0, 2), (1, 1)],  # T
    [(0, 0), (0, 1), (0, 2), (-1, 1)],  # ㅗ
    [(0, 0), (1, 0), (2, 0), (1, 1)],  # ㅏ
    [(0, 0), (1, 0), (2, 0), (1, -1)],  # ㅓ

    # L
    [(0, 0), (1, 0), (2, 0), (2, 1)],  # L
    [(0, 0), (1, 0), (2, 0), (2, -1)],  # J
    [(0, 0), (1, 0), (2, 0), (0, -1)],  # 세로 긴 ㄱ
    [(0, 0), (1, 0), (2, 0), (0, 1)],  # 세로 긴 ㄱ 반대
    [(0, 0), (1, 0), (1, 1), (1, 2)],  # ㄴ
    [(0, 0), (1, 0), (1, -1), (1, -2)],  # ㄴ 반대
    [(0, 0), (0, 1), (0, 2), (1, 2)],  # 가로 긴 ㄱ
    [(0, 0), (0, -1), (0, -2), (1, -2)],  # 가로 긴 ㄱ 반대

    # S
    [(0, 0), (0, 1), (1, 1), (1, 2)],   # Z
    [(0, 1), (0, 2), (1, 0), (1, 1)],   # S
    [(0, 0), (1, 0), (1, 1), (2, 1)],   # 4
    [(1, 0), (2, 0), (0, 1), (1, 1)]    # 4 반대
]


def tetro(si, sj):
    mx = 0
    for moyang in tetrominos:
        sm = 0
        for di, dj in moyang:
            ni, nj = si + di, sj + dj
            if 0<=ni<N and 0<=nj<M:
                sm += arr[ni][nj]
            else:
                break
        mx = max(mx, sm)
    return mx


N, M = map(int, input().split())
arr = [list(map(int, input().split())) for _ in range(N)]
ans = 0

for i in range(N):
    for j in range(M):
        ans = max(ans, tetro(i, j))

print(ans)